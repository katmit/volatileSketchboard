
@{
    ViewBag.Title = "Volatile Sketchboard";
}

<h2>Draw</h2>
<div class="container">
    <input type="text" id="message" />
    <input type="button" id="sendmessage" value="Send" />
    <input type="hidden" id="displayname" />
    <ul id="discussion">
    </ul>
    <div id="drawingModes">
        <!--maybe someday...-->
        @*
        <button id="drawButton" class="toolbarButton">Draw</button>
        <button id="squareButton" class="toolbarButton">Square</button>
        <button id="circleButton" class="toolbarButton">Circle</button>*@
    </div>
    <div id="drawingOptions" style="display: inline-block; width:100%;">
        <label for="drawingColor">Brush Color:</label>
        <input type="color" value="#0a0a0a" id="drawingColor">
        <br>
        <label for="brushSize">Brush Size:</label>
        <span id="brushSizeLabel">0</span>
        <input type="range" value="10" min="1" max="30" id="brushSize">
        <br>
    </div>
    <div class="row">
        <canvas width="1000" height="1000" id="canvas" isDrawingMode="true" style="border: 2px solid;">
        </canvas>
    </div>
</div>
<script src="~/Scripts/js/fabric.js"></script>
<script src="~/Scripts/VolatileCanvas.js"></script>

@section scripts {
    <!--Script references. -->
    <!--The jQuery library is required and is referenced by default in _Layout.cshtml. -->
    <!--Reference the SignalR library. -->
    <script src="~/Scripts/jquery.signalR-2.2.2.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>
    <!--SignalR script to update the chat page and send messages.-->
    <script>
      
        $(function () {
            // Reference the auto-generated proxy for the hub.
            var room = $.connection.drawingHub;
            // Create a function that the hub can call back to display messages.
            room.client.addNewMessageToPage = function (name, message) {
                // Add the message to the page.
                $('#discussion').append('<li><strong>' + htmlEncode(name)
                    + '</strong>: ' + htmlEncode(message) + '</li>');
            };
            // Create a function that the hub can call back to display drawings
            room.client.addNewDrawingToCanvas = function (jsonObject) {
                // Parse JSON and add objects to canvas
                var jsonObj = JSON.parse(jsonObject);
                fabric.util.enlivenObjects([jsonObj], function (enlivenedObjects) {
                    var newShape = enlivenedObjects[0];
                    newShape.blockAddEvent = true;
                    canvas.add(newShape);
                    canvas.renderAll();
                });
            }

            // Get the user name and store it to prepend to messages.
            $('#displayname').val(prompt('Enter your name:', ''));
            // Set initial focus to message input box.
            $('#message').focus();
            // Start the connection.
            $.connection.hub.start().done(function () {
                $('#sendmessage').click(function () {
                    // Call the Send method on the hub.
                    room.server.send($('#displayname').val(), $('#message').val());
                    // Clear text box and reset focus for next comment.
                    $('#message').val('').focus();
                });
                canvas.on('object:added', function (e) {
                    if (e.target.blockAddEvent) {
                        return false;
                    }
                    var objectString = JSON.stringify(e.target);
                    // Call the SendDrawing method on the hub
                    room.server.sendDrawing(objectString);
                });

            });

        });
        // This optional function html-encodes messages for display in the page.
        function htmlEncode(value) {
            var encodedValue = $('<div />').text(value).html();
            return encodedValue;
        }
    </script>
}
